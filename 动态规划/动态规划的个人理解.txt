2022年12月16日有感
用动态规划求最优解有两个难点，
1.找好递推数列，好的递推方程是解决成功的关键，这是最关键的一步
2.写出递推方程，它的找出往往依赖于子状态到下个状态的路径

每道题的难点都不一样，有的题难在第一点上，有的难在第二点上，有的两个都难。
如最长上升子序列问题，我一开始写的递推数列d[i]代表了前i个字段组成的最长子列的长度，结果写到死都写不出来递推方程。
后面看了题解才知道递推数列应该是代表了以a[i]为结尾的字段的最大值。
再比如01背包问题，也是打死都没想出递推数列。但是参考01背包问题，递推数列的确定应该要参照结果受多少个自由量影响，如01背包问题中的背包容量和前n个物品，
而最长上升子序列的自由量只有前n个字符。

相比于递推数列，递推方程就很好想，比如01背包问题中的d[i][j]由子状态推出只要根据第i个物体取不取就可以了，这个思想很类似于高中我们所学的第一个组合恒等式 Ck,n==Ck,n-1+Ck-1,n-1 。
类似的还有一道题就是，有n个坑每个坑能放一个炸弹，不能连续放三个炸弹，问有多少种放炸弹的方法，就是分第n个坑放不放炸弹来推出递推方程的。
还有就是斐波那契类问题难点也是找到递推方程。


还有就是注意要初始化数列
