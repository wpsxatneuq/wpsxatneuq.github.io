很明显这一题是个背包问题，所以我先尝试了一下穷举法
（因为我发现我好像不会暴力解决背包问题）



#include<stdio.h>
#include<iostream>
using namespace std;
#define n 4
void possible_solution(int x[n]){
    int i;
    for(i=0;i<n;i++)  //n=4,有2^4-1种解法
      if(x[i]!=1)
      {
      x[i]=1;
      return; //从遇到的第一位开始，若是0，将其变成1，然后结束循环，得到一种解法
      }
      else
      x[i]=0;
      return;//从第一位开始，若是1，将其变成0，然后继续循环，若再循环的时候遇到0，则将其变为1，结束循环。得到另一种解法。 
}
int main(){
    int count=0;
    int w[n]={2,3,4,5},v[n]={3,4,5,6};
    int x[n]={0,0,0,0},y[n]={0,0,0,0};
    int tw,tv,tv1=0,limit=8;
    int j;
    for(j=1;j<=15;j++){
        possible_solution(x);
        count++;
        for(int i=0;i<4;i++){
        cout<<x[i]<<" ";
      }
      cout<<endl;
        tw=x[0]*w[0]+x[1]*w[1]+x[2]*w[2]+x[3]*w[3];
        tv=x[0]*v[0]+x[1]*v[1]+x[2]*v[2]+x[3]*v[3];
        if(tw<=limit&&tv>tv1){
            tv1=tv; y[0]=x[0];y[1]=x[1];y[2]=x[2],y[3]=x[3];
        }
    }
    cout<<"共有"<<count<<"种解法."<<endl;
    printf("其中0-1背包问题的最优解为： y=(%d,%d,%d,%d)\n",y[0],y[1],y[2],y[3]);
    printf("总价值为：%d",tv1);
}
