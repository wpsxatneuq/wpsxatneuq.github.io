第一种方法是把第i种物品换成n[i]件01背包中的物品，处理成01背包问题。

第二种是利用二进制来进行优化，原来按照第一种方法，我们想要取8个a物体，那我们就要取8次1个a物体，采用二进制，我们取八个a物体，只要取2次1个a，1次2个a,1次4个a，操作4次，
将复杂度从n降低为log n。


第三种是单调队列优化，我不会。

处理完后就可以按照01背包来处理

for(int i=1;i<=n1;i++)
	{
		cin>>a[i].xx;//need
		cin>>a[i].yy;//money
		cin>>a[i].zz;
		x=a[i].xx;
		y=a[i].yy;
		if(a[i].zz!=0)
		{
			int k=2;
			int z=a[i].zz-1;
			a[i].zz=1;
			while(z-k>=0)//二进制展开。 
			{
				z=z-k;
				n1++;
				i++;
				a[i].xx=x*k;
				a[i].yy=y*k;
				a[i].zz=k;
				k=k*2;
			}
			if(z>0)
			{
				i++;
				n1++;
				a[i].xx=x*z;
				a[i].yy=y*z;
				a[i].zz=z;
			}
		}
