用dfs，用反向走的方法来确定最大值，因为反向第一次到达肯定是最大值所以不用回溯操作了。


#include <bits/stdc++.h>
using namespace std;
int n,m;
bool a[100005];//判断走没走过 
int A[100005] ;//答案 
vector<int>G[100005];
void dfs(int i,int d)
{
	if(A[i])
	{
		return ;
	}
	A[i]=d;
	for(int j=0;j<G[i].size();j++)
	{
		dfs(G[i][j],d);
	}
 } 
int main()
{
    cin>>n>>m;
    for(int i=1;i<=m;i++)
    {
    	int x,y;
    	cin>>x>>y;
    	G[y].push_back(x);	
	}
	for(int i=n;i>=1;i--)
	{
		dfs(i,i) ;
	}
	for(int i=1;i<=n;i++)
	{
		cout<<A[i]<<' ';
	}
    return 0;
}
